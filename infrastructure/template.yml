AWSTemplateFormatVersion: "2010-09-09"
Description: Discord Event Bot CloudFormation

Parameters:
  DiscordPublicKey:
    Type: String
    Description: Discord Bot Public Key from Developer Portal
    NoEcho: true
  
Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: [sts.AssumeRole]
      Policies:
        - PolicyName: LambdaLoggingPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

  DiscordBotFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: app.handler
      Runtime: nodejs18.x
      Role: !GetAtt LambdaExecutionRole.Arn
      Code: ../dist
      Timeout: 30
      MemorySize: 128
      Environment:
        Variables:
          DISCORD_PUBLIC_KEY: !Ref DiscordPublicKey

  HttpApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: DiscordBotHttpApi
      ProtocolType: HTTP

  HttpApiIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref HttpApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt DiscordBotFunction.Arn
      PayloadFormatVersion: "2.0"

  HttpApiRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref HttpApi
      RouteKey: "POST /"
      Target: !Join ["/", ["integrations", !Ref HttpApiIntegration]]

  HttpApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref HttpApi
      StageName: $default
      AutoDeploy: true

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt DiscordBotFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpApi}/*/*"

Outputs:
  ApiEndpoint:
    Description: "API Gateway Endpoint URL"
    Value: !GetAtt HttpApi.ApiEndpoint
